pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = '740675012653'
        AWS_REGION = 'us-east-1'
        ECR_REPO = 'gcg-docker-test-setup'
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'git@bitbucket.org:devops.git'
            }
        }
        stage('Build and Push Images') {
            steps {
                sh '''
                docker build -t php-app:latest ./app
                docker build -t nginx-server:latest ./nginx
                docker build -t mysql-db:latest ./mysql
                docker build -t tomcat-server:latest ./tomcat

                aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
                
                docker tag php-app:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:latest
                docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:latest
                '''
            }
        }
        stage('Deploy to EC2') {
            steps {
                sh '''
                ansible-playbook -i ansible/inventory.ini ansible/deploy-containers.yml
                '''
            }
        }
        stage('Perform Blue-Green Deployment') {
            steps {
                sh '''
                ansible-playbook -i ansible/inventory.ini ansible/blue-green-deploy.yml
                '''
            }
        }
    }
}
